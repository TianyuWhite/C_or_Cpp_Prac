1018. 锤子剪刀布 (20)
时间限制
100 ms
内存限制
65536 kB
代码长度限制
8000 B
判题程序
Standard
作者
CHEN, Yue
大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：


现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。

输入格式：

输入第1行给出正整数N（<=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。

输出格式：

输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。

输入样例：
10
C J
J B
C B
B B
B C
C C
C B
J B
B C
J J
输出样例：
5 3 2
2 3 5
B B



#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int main()
{
    long n;
    char an, bn;
    int a[3]={0}, b[3]={0};
    int anum[3]={0}, bnum[3]={0};
    char zimu[3]={'B', 'C', 'J'};
    int maxa=0, maxb=0;
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>an>>bn;
        switch(an){
            case 'C':
                switch(bn){
                case 'C':
                    a[1]++;
                    b[1]++;
                    break;
                case 'J':
                    a[0]++;
                    anum[1]++;
                    b[2]++;
                    break;
                case 'B':
                    a[2]++;
                    b[0]++;
                    bnum[0]++;
                    break;
                }
                break;
            case 'J':
                switch(bn){
                case 'C':
                    a[2]++;
                    b[0]++;
                    bnum[1]++;
                    break;
                case 'J':
                    a[1]++;
                    b[1]++;
                    break;
                case 'B':
                    a[0]++;
                    anum[2]++;
                    //cout<<" J"<<endl;
                    b[2]++;
                    break;
                }
                break;
            case 'B':
                switch(bn){
                case 'C':
                    a[0]++;
                    anum[0]++;
                    //cout<<" B"<<endl;
                    b[2]++;
                    break;
                case 'J':
                    a[2]++;
                    b[0]++;
                    bnum[2]++;
                    break;
                case 'B':
                    a[1]++;
                    b[1]++;
                    break;
                }
                break;
        }
    }
    cout<<a[0]<<" "<<a[1]<<" "<<a[2]<<endl;
    cout<<b[0]<<" "<<b[1]<<" "<<b[2]<<endl;
    for(int i=0;i<3;i++){
        if(anum[i]>anum[maxa]){
            maxa = i;
        }
        if(bnum[i]>bnum[maxb]){
            maxb = i;
        }
    }
    //cout<<maxa<<" "<<maxb<<endl;
    cout<<zimu[maxa]<<" "<<zimu[maxb]<<endl;
    return 0;
}
