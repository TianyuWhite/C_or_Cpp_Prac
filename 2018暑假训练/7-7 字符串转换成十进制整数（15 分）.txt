7-7 字符串转换成十进制整数（15 分）
输入一个以#结束的字符串，本题要求滤去所有的非十六进制字符（不分大小写），组成一个新的表示十六进制数字的字符串，然后将其转换为十进制数后输出。如果在第一个十六进制字符之前存在字符“-”，则代表该数是负数。

输入格式：
输入在一行中给出一个以#结束的非空字符串。

输出格式：
在一行中输出转换后的十进制数。题目保证输出在长整型范围内。

输入样例：
+-P-xf4+-1!#
输出样例：
-3905


#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main()
{
    string s;
    char c[10000];
    int flag=0, num=0, number, sum=0;
    getline(cin, s);
    for(int i=0;i<s.length();i++){
        if(isdigit(s[i])){
            c[num]=s[i];
            num++;
            if(flag==0){
                flag=2;
            }
        }
        else if(s[i]>='A'&&s[i]<='F'||s[i]>='a'&&s[i]<='f'){
            c[num]=s[i];
            num++;
            if(flag==0){
                flag=2;
            }
        }
        else if(s[i]=='-'&&flag==0){
            flag=1;
        }
    }
    for(int i=0;i<num;i++){
        if(isdigit(c[i])){
            number = c[i]-'0';
        }
        else if(c[i]>='A'&&c[i]<='F'){
            number = c[i]-'A'+10;
        }
        else if(c[i]>='a'&&c[i]<='f'){
            number = c[i]-'a'+10;
        }
        //cout<<number<<endl;
        for(int j=i;j<num-1;j++){
            number = number*16;
        }
        //cout<<number<<endl;
        sum =sum+number;
    }
    if(flag==1){
        cout<<-sum;
    }else{
        cout<<sum;}

    return 0;
}
