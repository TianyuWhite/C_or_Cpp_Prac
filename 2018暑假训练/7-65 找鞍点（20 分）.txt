7-65 找鞍点（20 分）
一个矩阵元素的“鞍点”是指该位置上的元素值在该行上最大、在该列上最小。

本题要求编写程序，求一个给定的n阶方阵的鞍点。

输入格式：
输入第一行给出一个正整数n（1≤n≤6）。随后n行，每行给出n个整数，其间以空格分隔。

输出格式：
输出在一行中按照“行下标 列下标”（下标从0开始）的格式输出鞍点的位置。如果鞍点不存在，则输出“NONE”。题目保证给出的矩阵至多存在一个鞍点。

输入样例1：
4
1 7 4 1
4 8 3 6
1 6 1 2
0 7 8 9
输出样例1：
2 1
输入样例2：
2
1 7
4 1
输出样例2：
NONE



#include <iostream>

using namespace std;

int num[10][10], n;

int IsMax(int i, int j){//hang max
    for(int k=0;k<n;k++){
        if(num[i][j]<num[i][k]){
            return 0;
        }
    }
    return 1;
}

int IsMin(int i, int j){//lie min
    for(int k=0;k<n;k++){
        if(num[i][j]>num[k][j]){
            return 0;
        }
    }
    return 1;
}

int main()
{
    int flag=0, mi, mj;
    cin>>n;
    for(int i=0;i<n;i++){   //hang
        for(int j=0;j<n;j++){   //lie
            cin>>num[i][j];
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(IsMax(i, j)==1 && IsMin(i, j)==1){
                mi=i;
                mj=j;
                flag=1;
            }
        }
    }
    if(flag==1){
        cout<<mi<<" "<<mj;
    }else{
    cout<<"NONE";}
    return 0;
}
