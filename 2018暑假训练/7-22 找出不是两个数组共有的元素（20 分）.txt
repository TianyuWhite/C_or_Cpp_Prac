7-22 找出不是两个数组共有的元素（20 分）提问
给定两个整型数组，本题要求找出不是两者共有的元素。

输入格式:
输入分别在两行中给出两个整型数组，每行先给出正整数N（≤20），随后是N个整数，其间以空格分隔。

输出格式:
在一行中按照数字给出的顺序输出不是两数组共有的元素，数字间以空格分隔，但行末不得有多余的空格。题目保证至少存在一个这样的数字。同一数字不重复输出。

输入样例:
10 3 -5 2 8 0 3 5 -15 9 100
11 6 4 8 2 6 -5 9 0 100 8 1
输出样例:
3 5 -15 6 4 1


#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int num1[100];
    int num2[100];

    int n1, n2, num, l1=0, l2=0, flag=0, i, j, f=0;
    cin>>n1;
    for(i=0;i<n1;i++){
        cin>>num;
        if(i==0){
            num1[l1] = num;
            l1++;
        }
        else{
            f=0;
            for(j=0;j<l1;j++){
                if(num1[j] == num){
                    f=1;
                }
            }
            if(f==0){
                num1[l1] = num;
                l1++;
            }
        }
    }
    cin>>n2;
    for(i=0;i<n2;i++){
        cin>>num;
        if(i==0){
            num2[l2] = num;
            l2++;
        }
        else{
            f=0;
            for(j=0;j<l2;j++){
                if(num2[j] == num){
                    f=1;
                }
            }
            if(f==0){
                num2[l2] = num;
                l2++;
            }
        }
    }
    for(i=0;i<l1;i++){
        f=0;
        for(j=0;j<l2;j++){
            if(num1[i]==num2[j]){
                f=1;
                break;
            }
        }
        if(f==0){
            if(flag==0){
                cout<<num1[i];
                flag=1;
            }
            else{
                cout<<" "<<num1[i];
            }

        }
    }
    for(i=0;i<l2;i++){
        f=0;
        for(j=0;j<l1;j++){
            if(num2[i]==num1[j]){
                f=1;
                break;
            }
        }
        if(f==0){
            if(flag==0){
                cout<<num2[i];
                flag=1;
            }
            else{
                cout<<" "<<num2[i];
            }
        }
    }
    return 0;
}
